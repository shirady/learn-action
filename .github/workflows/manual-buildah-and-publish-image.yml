# Taken from an open PR
# Multiplatform amd64/arm64/ppc64le image build w/ manifest
#
name: Manual Buildah Dispatch
on: 
 workflow_dispatch:
  inputs:
    branch:
      description: 'Branch to Build From'
      required: true
    tag:
      description: 'Additional tag for the build (such as alpha, beta, etc.) - Optional'
      default: ''

jobs:
  manual-buildah-and-publish-image:
    runs-on: ubuntu-22.04
    env:
      PLATFORMS: "linux/amd64,linux/arm64,linux/ppc64le"
      GIT_COMMIT: ${{ github.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Enable emulation
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            qemu qemu-user-static
          sudo update-binfmts --display
          echo "ℹ️ podman"
          podman version
          echo "ℹ️ buildah"
          buildah version
          echo "ℹ️ skopeo"
          skopeo -v


      - name: Get Current Date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"
      
      - name: Prepare Suffix
        id: suffix
        if: ${{ github.event.inputs.tag != '' }}
        run: echo ::set-output name=suffix::"-${{ github.event.inputs.tag }}"

      - name: Prepare Tags
        id: prep
        run: |
          DOCKER_BASE_IMAGE=noobaa/noobaa-base
          DOCKER_BUILDER_IMAGE=noobaa/noobaa-builder
          DOCKER_CORE_IMAGE=noobaa/noobaa-core
          VERSION="${{ steps.date.outputs.date }}"
          echo "::warning ${VERSION}"
          BASE_TAGS="${DOCKER_BASE_IMAGE}:${{ github.event.inputs.branch }}-${VERSION}${{ steps.suffix.outputs.suffix }}"
          BUILDER_TAGS="${DOCKER_BUILDER_IMAGE}:${{ github.event.inputs.branch }}-${VERSION}${{ steps.suffix.outputs.suffix }}"
          CORE_TAGS="${DOCKER_CORE_IMAGE}:${{ github.event.inputs.branch }}-${VERSION}${{ steps.suffix.outputs.suffix }}"
          CORE_OCS_DEV_TAG="ocs-dev/noobaa-core:${{ github.event.inputs.branch }}-latest"
          echo "::warning ${CORE_TAGS}"
          echo ::set-output name=basetags::${BASE_TAGS}
          echo ::set-output name=buildertags::${BUILDER_TAGS}
          echo ::set-output name=coretags::${CORE_TAGS}
          echo ::set-output name=ocsdevlatest::${CORE_OCS_DEV_TAG}

#       - name: Login to DockerHub Registry
#         run: echo ${{ secrets.GHACTIONSDOCKERHUB }} | podman login -u ${{ secrets.GHACTIONSDOCKERHUBNAME }} --password-stdin

#       - name: Login to Quay Registry
#         run: echo ${{ secrets.GHACTIONQUAYTOKEN }} | podman login quay.io -u ${{ secrets.GHACTIONQUAYNAME }} --password-stdin

      - name: Build Builder Images
        run: |
          buildah build \
            -f src/deploy/NVA_build/builder.Dockerfile \
            --platform=$PLATFORMS \
            --manifest localhost/noobaa-builder
          echo "ℹ️ Inspect noobaa-builder manifest"
          skopeo inspect --raw containers-storage:localhost/noobaa-builder

      - name: Build Base Images
        run: |
          buildah build \
            -f src/deploy/NVA_build/Base.Dockerfile \
            --platform=$PLATFORMS \
            --manifest localhost/noobaa-base
          echo "ℹ️ Inspect noobaa-base manifest"
          skopeo inspect --raw containers-storage:localhost/noobaa-base

      - name: Build NooBaa Images
        run: |
          buildah build \
            -f src/deploy/NVA_build/NooBaa.Dockerfile \
            --build-arg GIT_COMMIT=$GIT_COMMIT \
            --platform=$PLATFORMS \
            --manifest localhost/noobaa
          echo "ℹ️ Inspect noobaa manifest"
          skopeo inspect --raw containers-storage:localhost/noobaa

#       - name: Push Docker Images to DockerHub
#         env:
#           DOCKERHUB_OWNER: ${{ secrets.GHACTIONSDOCKERHUBNAME }}
#         run: |
#           buildah tag localhost/noobaa-base ${{ steps.prep.outputs.basetags }}
#           podman manifest push --all  ${{ steps.prep.outputs.basetags }} docker://${{ steps.prep.outputs.basetags }}
#           buildah tag localhost/noobaa-builder ${{ steps.prep.outputs.buildertags }}
#           podman manifest push --all  ${{ steps.prep.outputs.buildertags }} docker://${{ steps.prep.outputs.buildertags }}
#           buildah tag localhost/noobaa ${{ steps.prep.outputs.coretags }}
#           podman manifest push --all  ${{ steps.prep.outputs.coretags }} docker://${{ steps.prep.outputs.coretags }}

#       - name: Push Docker Images to Quay
#         env:
#           DOCKERHUB_OWNER: ${{ secrets.GHACTIONQUAYNAME }}
#         run: |
#           buildah tag ${{ steps.prep.outputs.coretags }} quay.io/${{ steps.prep.outputs.coretags }}
#           podman manifest push --all  quay.io/${{ steps.prep.outputs.coretags }} docker://quay.io/${{ steps.prep.outputs.coretags }}

#       - name: Push to ocs-dev as latest
#         env:
#           DOCKERHUB_OWNER: ${{ secrets.GHACTIONQUAYNAME }}
#         run: |
#           podman login -u="${{ secrets.OCSDEVCIUSER }}" -p="${{ secrets.OCSDEVCITOKEN }}" quay.io

#           buildah tag ${{ steps.prep.outputs.coretags }} quay.io/${{ steps.prep.outputs.ocsdevlatest }}
#           podman manifest push --all  quay.io/${{ steps.prep.outputs.ocsdevlatest }} docker://quay.io/${{ steps.prep.outputs.ocsdevlatest }}

      - name: Invoke Build on Operator Repo
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Manual Operator Build Dispatch
          repo: noobaa/noobaa-operator
          token: ${{ secrets.GHACCESSTOKEN }}
          inputs: '{ "branch": "${{ github.event.inputs.branch }}", "tag": "${{ github.event.inputs.tag }}" }'
